// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π –¥–∏–∞–ª–æ–≥–æ–≤

export interface HistoryItem {
  id: string;
  title: string;
  subject: string;
  timestamp: Date;
  icon: string;
  messages: Array<{
    id: string;
    role: 'user' | 'assistant' | 'system';
    content: string;
    timestamp: Date;
  }>;
}

const HISTORY_KEY = 'pomogator_history';

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
export function getHistory(): HistoryItem[] {
  try {
    const stored = localStorage.getItem(HISTORY_KEY);
    if (!stored) return [];
    
    const history = JSON.parse(stored);
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º timestamp –æ–±—Ä–∞—Ç–Ω–æ –≤ Date –æ–±—ä–µ–∫—Ç—ã
    return history.map((item: any) => ({
      ...item,
      timestamp: new Date(item.timestamp),
      messages: item.messages.map((msg: any) => ({
        ...msg,
        timestamp: new Date(msg.timestamp)
      }))
    }));
  } catch (error) {
    console.error('Error loading history:', error);
    return [];
  }
}

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
export function saveHistory(history: HistoryItem[]): void {
  try {
    localStorage.setItem(HISTORY_KEY, JSON.stringify(history));
  } catch (error) {
    console.error('Error saving history:', error);
  }
}

// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ –≤ –∏—Å—Ç–æ—Ä–∏—é
export function addToHistory(messages: Array<{
  id: string;
  role: 'user' | 'assistant' | 'system';
  content: string;
  timestamp: Date;
}>): string {
  const history = getHistory();
  
  // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const firstUserMessage = messages.find(msg => msg.role === 'user');
  const title = firstUserMessage ? 
    (firstUserMessage.content.length > 50 ? 
      firstUserMessage.content.substring(0, 50) + '...' : 
      firstUserMessage.content
    ) : '–ù–æ–≤—ã–π –¥–∏–∞–ª–æ–≥';
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
  const subject = determineSubject(firstUserMessage?.content || '');
  
  const newItem: HistoryItem = {
    id: `chat_${Date.now()}`,
    title,
    subject,
    timestamp: new Date(),
    icon: getSubjectIcon(subject),
    messages
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
  history.unshift(newItem);
  
  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50)
  const limitedHistory = history.slice(0, 50);
  
  saveHistory(limitedHistory);
  return newItem.id;
}

// –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–∏–∞–ª–æ–≥
export function updateHistoryItem(id: string, messages: Array<{
  id: string;
  role: 'user' | 'assistant' | 'system';
  content: string;
  timestamp: Date;
}>): void {
  const history = getHistory();
  const itemIndex = history.findIndex(item => item.id === id);
  
  if (itemIndex !== -1) {
    history[itemIndex].messages = messages;
    history[itemIndex].timestamp = new Date();
    saveHistory(history);
  }
}

// –£–¥–∞–ª–∏—Ç—å –¥–∏–∞–ª–æ–≥ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
export function removeFromHistory(id: string): void {
  const history = getHistory();
  const filteredHistory = history.filter(item => item.id !== id);
  saveHistory(filteredHistory);
}

// –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
export function clearHistory(): void {
  localStorage.removeItem(HISTORY_KEY);
}

// –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
function determineSubject(content: string): string {
  const lowerContent = content.toLowerCase();
  
  if (lowerContent.includes('–º–∞—Ç–µ–º–∞—Ç–∏–∫') || lowerContent.includes('—É—Ä–∞–≤–Ω–µ–Ω') || 
      lowerContent.includes('–∞–ª–≥–µ–±—Ä') || lowerContent.includes('–≥–µ–æ–º–µ—Ç—Ä') ||
      lowerContent.includes('–∏–Ω—Ç–µ–≥—Ä–∞–ª') || lowerContent.includes('–ø—Ä–æ–∏–∑–≤–æ–¥–Ω') ||
      lowerContent.includes('—Ñ—É–Ω–∫—Ü–∏') || lowerContent.includes('–≥—Ä–∞—Ñ–∏–∫')) {
    return '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞';
  }
  
  if (lowerContent.includes('—Ñ–∏–∑–∏–∫') || lowerContent.includes('–º–µ—Ö–∞–Ω–∏–∫') ||
      lowerContent.includes('—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤') || lowerContent.includes('–º–∞–≥–Ω–µ—Ç–∏–∑–º') ||
      lowerContent.includes('—Ç–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫') || lowerContent.includes('–æ–ø—Ç–∏–∫') ||
      lowerContent.includes('—ç–Ω–µ—Ä–≥') || lowerContent.includes('—Å–∏–ª')) {
    return '–§–∏–∑–∏–∫–∞';
  }
  
  if (lowerContent.includes('—Ö–∏–º–∏') || lowerContent.includes('—Ä–µ–∞–∫—Ü') ||
      lowerContent.includes('–º–æ–ª–µ–∫—É–ª') || lowerContent.includes('–∞—Ç–æ–º') ||
      lowerContent.includes('—ç–ª–µ–º–µ–Ω—Ç') || lowerContent.includes('—Å–æ–µ–¥–∏–Ω–µ–Ω') ||
      lowerContent.includes('–≤–∞–ª–µ–Ω—Ç–Ω') || lowerContent.includes('–æ–∫—Å–∏–¥')) {
    return '–•–∏–º–∏—è';
  }
  
  if (lowerContent.includes('–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω') || lowerContent.includes('–∞–ª–≥–æ—Ä–∏—Ç–º') ||
      lowerContent.includes('–∫–æ–¥') || lowerContent.includes('—Ñ—É–Ω–∫—Ü–∏') ||
      lowerContent.includes('—Ü–∏–∫–ª') || lowerContent.includes('–º–∞—Å—Å–∏–≤') ||
      lowerContent.includes('–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫') || lowerContent.includes('–∫–æ–º–ø—å—é—Ç–µ—Ä')) {
    return '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞';
  }
  
  if (lowerContent.includes('–±–∏–æ–ª–æ–≥') || lowerContent.includes('–∫–ª–µ—Ç–∫') ||
      lowerContent.includes('–æ—Ä–≥–∞–Ω–∏–∑–º') || lowerContent.includes('–≥–µ–Ω') ||
      lowerContent.includes('—ç–≤–æ–ª—é—Ü') || lowerContent.includes('—ç–∫–æ—Å–∏—Å—Ç–µ–º')) {
    return '–ë–∏–æ–ª–æ–≥–∏—è';
  }
  
  if (lowerContent.includes('–∏—Å—Ç–æ—Ä–∏') || lowerContent.includes('–≤–æ–π–Ω') ||
      lowerContent.includes('—Ä–µ–≤–æ–ª—é—Ü') || lowerContent.includes('–¥—Ä–µ–≤–Ω') ||
      lowerContent.includes('—Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤') || lowerContent.includes('—ç–ø–æ—Ö')) {
    return '–ò—Å—Ç–æ—Ä–∏—è';
  }
  
  if (lowerContent.includes('–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä') || lowerContent.includes('–ø–∏—Å–∞—Ç–µ–ª') ||
      lowerContent.includes('–ø–æ—ç—Ç') || lowerContent.includes('—Ä–æ–º–∞–Ω') ||
      lowerContent.includes('—Å—Ç–∏—Ö') || lowerContent.includes('–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω')) {
    return '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞';
  }
  
  return '–û–±—â–µ–µ';
}

// –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
function getSubjectIcon(subject: string): string {
  const iconMap: Record<string, string> = {
    '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞': 'üìê',
    '–§–∏–∑–∏–∫–∞': '‚öóÔ∏è',
    '–•–∏–º–∏—è': 'üî¨',
    '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞': 'üíª',
    '–ë–∏–æ–ª–æ–≥–∏—è': 'üß¨',
    '–ò—Å—Ç–æ—Ä–∏—è': 'üìö',
    '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞': 'üìñ',
    '–û–±—â–µ–µ': 'üìù'
  };
  
  return iconMap[subject] || 'üìù';
}
